name: Terraform GitHub Actions
on:
schedule:
# Runs at 00:00. everyday  Minute | Hour | day of Month | Month | Day of Week
 - cron: "0 0 * * *" 
   push:
    branches: 
      - main
   pull_request:
    branches:
      - main
   workflow_dispatch: 

env:
   ROOT_PATH: '${{ github.workspace }}/DevMain'

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Install
        uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: | 
          terraform --version
          terraform fmt
        continue-on-error: true
        working-directory: ${{env.ROOT_PATH}}        
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}        
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color  
        working-directory: ${{env.ROOT_PATH}}      
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
        working-directory: ${{env.ROOT_PATH}}

  terraform_apply:
    runs-on: ubuntu-latest
    needs: [terraform_plan]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Install
        uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: | 
          terraform --version
          terraform fmt
        continue-on-error: true
        working-directory: ${{env.ROOT_PATH}}        
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{env.ROOT_PATH}}        
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color  
        working-directory: ${{env.ROOT_PATH}}      
      - name: Terraform Apply
        id: Apply
        run: terraform apply -auto-approve
        continue-on-error: true
        working-directory: ${{env.ROOT_PATH}}        
          

